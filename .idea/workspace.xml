<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="5be1fe28-dc37-4ad5-a4a1-45a973f4b7af" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/zig-helm.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/helm-client.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/commons/config.go" beforeDir="false" afterPath="$PROJECT_DIR$/commons/config.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/commons/helpers.go" beforeDir="false" afterPath="$PROJECT_DIR$/commons/helpers.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/conf/app.conf" beforeDir="false" afterPath="$PROJECT_DIR$/conf/app.conf" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/controllers/releases.go" beforeDir="false" afterPath="$PROJECT_DIR$/controllers/releases.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/controllers/repos.go" beforeDir="false" afterPath="$PROJECT_DIR$/controllers/repos.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/controllers/user.go" beforeDir="false" afterPath="$PROJECT_DIR$/controllers/user.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lastupdate.tmp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/logs/logagent.log" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/routers/router.go" beforeDir="false" afterPath="$PROJECT_DIR$/routers/router.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/handlers/releases.go" beforeDir="false" afterPath="$PROJECT_DIR$/services/handlers/releases.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/handlers/repos.go" beforeDir="false" afterPath="$PROJECT_DIR$/services/handlers/repos.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/helm/helm.go" beforeDir="false" afterPath="$PROJECT_DIR$/services/helm/helm.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/interfaces.go" beforeDir="false" afterPath="$PROJECT_DIR$/services/interfaces.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/swagger/swagger.json" beforeDir="false" afterPath="$PROJECT_DIR$/swagger/swagger.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/swagger/swagger.yml" beforeDir="false" afterPath="$PROJECT_DIR$/swagger/swagger.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/default_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/tests/default_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/cloud.google.com/go/compute/metadata/metadata.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/cloud.google.com/go/compute/metadata/metadata.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/ghodss/yaml/go.mod" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/ghodss/yaml/go.sum" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/ghodss/yaml/yaml.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/ghodss/yaml/yaml.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/ghodss/yaml/yaml_go110.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/gobwas/glob/bench.sh" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/gobwas/glob/bench.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/golang/protobuf/jsonpb/jsonpb.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/golang/protobuf/jsonpb/jsonpb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/googleapis/gnostic/OpenAPIv2/OpenAPIv2.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/googleapis/gnostic/OpenAPIv2/OpenAPIv2.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/googleapis/gnostic/compiler/reader.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/googleapis/gnostic/compiler/reader.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/googleapis/gnostic/extensions/COMPILE-EXTENSION.sh" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/googleapis/gnostic/extensions/COMPILE-EXTENSION.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/googleapis/gnostic/extensions/extension.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/googleapis/gnostic/extensions/extension.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/grpc-ecosystem/grpc-gateway/runtime/BUILD.bazel" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/grpc-ecosystem/grpc-gateway/runtime/BUILD.bazel" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/imdario/mergo/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/imdario/mergo/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/imdario/mergo/map.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/imdario/mergo/map.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/imdario/mergo/merge.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/imdario/mergo/merge.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/json-iterator/go/build.sh" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/json-iterator/go/build.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/json-iterator/go/test.sh" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/json-iterator/go/test.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/modern-go/concurrent/test.sh" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/modern-go/concurrent/test.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/modern-go/reflect2/test.sh" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/modern-go/reflect2/test.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/opencontainers/go-digest/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/opencontainers/go-digest/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/opencontainers/go-digest/algorithm.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/opencontainers/go-digest/algorithm.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/opencontainers/go-digest/digest.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/opencontainers/go-digest/digest.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/opencontainers/go-digest/digester.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/opencontainers/go-digest/digester.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/opencontainers/go-digest/doc.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/opencontainers/go-digest/doc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/opencontainers/go-digest/verifiers.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/opencontainers/go-digest/verifiers.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/peterbourgon/diskv/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/peterbourgon/diskv/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/peterbourgon/diskv/diskv.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/peterbourgon/diskv/diskv.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/pkg/errors/Makefile" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/pkg/errors/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/pkg/errors/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/pkg/errors/errors.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/pkg/errors/errors.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/pkg/errors/stack.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/pkg/errors/stack.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/russross/blackfriday/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/russross/blackfriday/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/russross/blackfriday/block.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/russross/blackfriday/block.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/russross/blackfriday/inline.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/russross/blackfriday/inline.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/sirupsen/logrus/CHANGELOG.md" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/sirupsen/logrus/CHANGELOG.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/sirupsen/logrus/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/sirupsen/logrus/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/sirupsen/logrus/alt_exit.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/sirupsen/logrus/alt_exit.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/sirupsen/logrus/entry.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/sirupsen/logrus/entry.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/sirupsen/logrus/exported.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/sirupsen/logrus/exported.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/sirupsen/logrus/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/sirupsen/logrus/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/sirupsen/logrus/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/sirupsen/logrus/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/sirupsen/logrus/json_formatter.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/sirupsen/logrus/json_formatter.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/sirupsen/logrus/logger.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/sirupsen/logrus/logger.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/sirupsen/logrus/logrus.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/sirupsen/logrus/logrus.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/sirupsen/logrus/terminal_check_bsd.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/sirupsen/logrus/terminal_check_notappengine.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/sirupsen/logrus/terminal_check_notappengine.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/sirupsen/logrus/terminal_check_solaris.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/sirupsen/logrus/terminal_check_unix.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/sirupsen/logrus/text_formatter.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/sirupsen/logrus/text_formatter.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/count.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/count.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/float32_slice.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/float64_slice.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/int32_slice.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/int64_slice.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/ip_slice.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/ip_slice.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/net/http2/server.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/golang.org/x/net/http2/server.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/mkall.sh" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/mkall.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/mkerrors.sh" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/mkerrors.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/mksysctl_openbsd.pl" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/mksysctl_openbsd.pl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/sockcmsg_unix.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/sockcmsg_unix.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/sys/windows/mkerrors.bash" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/windows/mkerrors.bash" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/sys/windows/syscall_windows.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/windows/syscall_windows.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/sys/windows/zsyscall_windows.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/windows/zsyscall_windows.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/text/transform/transform.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/golang.org/x/text/transform/transform.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/appengine/internal/datastore/datastore_v3.proto" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/appengine/internal/datastore/datastore_v3.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/appengine/internal/regen.sh" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/appengine/internal/regen.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/appengine/travis_install.sh" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/appengine/travis_install.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/appengine/travis_test.sh" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/appengine/travis_test.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/CONTRIBUTING.md" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/CONTRIBUTING.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/balancer/balancer.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/balancer/balancer.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/balancer/base/balancer.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/balancer/base/balancer.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/balancer_conn_wrappers.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/balancer_conn_wrappers.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/balancer_v1_wrapper.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/balancer_v1_wrapper.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/clientconn.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/clientconn.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/codegen.sh" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/codegen.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/credentials/credentials.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/credentials/credentials.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/dialoptions.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/dialoptions.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/encoding/encoding.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/encoding/encoding.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/grpclog/grpclog.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/grpclog/grpclog.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/install_gae.sh" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/install_gae.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/internal/balancerload/load.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/internal/binarylog/regenerate.sh" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/internal/binarylog/regenerate.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/internal/envconfig/envconfig.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/internal/envconfig/envconfig.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/internal/syscall/syscall_nonlinux.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/internal/syscall/syscall_nonlinux.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/internal/transport/handler_server.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/internal/transport/handler_server.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/internal/transport/http2_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/internal/transport/http2_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/internal/transport/http2_server.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/internal/transport/http2_server.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/internal/transport/http_util.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/internal/transport/http_util.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/internal/transport/transport.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/internal/transport/transport.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/picker_wrapper.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/picker_wrapper.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/resolver/dns/dns_resolver.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/resolver/dns/dns_resolver.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/resolver/passthrough/passthrough.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/resolver/passthrough/passthrough.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/resolver/resolver.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/resolver/resolver.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/resolver_conn_wrapper.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/resolver_conn_wrapper.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/server.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/server.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/service_config.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/service_config.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/stats/stats.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/stats/stats.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/stream.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/stream.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/trace.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/trace.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/version.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/version.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/vet.sh" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/vet.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/api/admissionregistration/v1beta1/generated.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/api/admissionregistration/v1beta1/generated.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/api/admissionregistration/v1beta1/generated.proto" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/api/admissionregistration/v1beta1/generated.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/api/admissionregistration/v1beta1/types.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/api/admissionregistration/v1beta1/types.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/api/admissionregistration/v1beta1/types_swagger_doc_generated.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/api/admissionregistration/v1beta1/types_swagger_doc_generated.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/api/admissionregistration/v1beta1/zz_generated.deepcopy.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/api/admissionregistration/v1beta1/zz_generated.deepcopy.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/api/auditregistration/v1alpha1/generated.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/api/auditregistration/v1alpha1/generated.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/api/auditregistration/v1alpha1/generated.proto" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/api/auditregistration/v1alpha1/generated.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/api/auditregistration/v1alpha1/types.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/api/auditregistration/v1alpha1/types.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/api/auditregistration/v1alpha1/types_swagger_doc_generated.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/api/auditregistration/v1alpha1/types_swagger_doc_generated.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/api/auditregistration/v1alpha1/zz_generated.deepcopy.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/api/auditregistration/v1alpha1/zz_generated.deepcopy.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/api/extensions/v1beta1/types.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/api/extensions/v1beta1/types.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/api/errors/errors.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/api/errors/errors.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/api/meta/help.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/api/meta/help.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/apis/meta/internalversion/types.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/apis/meta/internalversion/types.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/apis/meta/internalversion/zz_generated.conversion.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/apis/meta/internalversion/zz_generated.conversion.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/apis/meta/v1/generated.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/apis/meta/v1/generated.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/apis/meta/v1/time.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/apis/meta/v1/time.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/apis/meta/v1/types.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/apis/meta/v1/types.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/apis/meta/v1/types_swagger_doc_generated.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/apis/meta/v1/types_swagger_doc_generated.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/apis/meta/v1/unstructured/unstructuredscheme/scheme.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/apis/meta/v1/unstructured/unstructuredscheme/scheme.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/apis/meta/v1beta1/generated.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/apis/meta/v1beta1/generated.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/apis/meta/v1beta1/generated.proto" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/apis/meta/v1beta1/generated.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/apis/meta/v1beta1/register.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/apis/meta/v1beta1/register.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/apis/meta/v1beta1/types.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/apis/meta/v1beta1/types.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/apis/meta/v1beta1/types_swagger_doc_generated.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/apis/meta/v1beta1/types_swagger_doc_generated.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/apis/meta/v1beta1/zz_generated.deepcopy.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/apis/meta/v1beta1/zz_generated.deepcopy.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/runtime/error.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/runtime/error.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/runtime/helper.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/runtime/helper.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/runtime/interfaces.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/runtime/interfaces.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/runtime/serializer/codec_factory.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/runtime/serializer/codec_factory.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/runtime/serializer/json/json.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/runtime/serializer/json/json.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/runtime/serializer/versioning/versioning.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/runtime/serializer/versioning/versioning.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/runtime/types.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/runtime/types.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/util/diff/diff.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/util/diff/diff.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/util/runtime/runtime.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/util/runtime/runtime.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/util/wait/wait.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/util/wait/wait.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/watch/streamwatcher.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/watch/streamwatcher.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/watch/watch.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/apimachinery/pkg/watch/watch.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/apiserver/pkg/authentication/serviceaccount/util.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/apiserver/pkg/authentication/serviceaccount/util.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/apiserver/pkg/features/kube_features.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/apiserver/pkg/features/kube_features.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/cli-runtime/pkg/resource/builder.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/cli-runtime/pkg/resource/builder.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/cli-runtime/pkg/resource/scheme.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/cli-runtime/pkg/resource/scheme.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/dynamic/scheme.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/dynamic/scheme.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/dynamic/simple.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/dynamic/simple.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/admissionregistration/v1beta1/admissionregistration_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/admissionregistration/v1beta1/admissionregistration_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/apps/v1/apps_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/apps/v1/apps_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/apps/v1beta1/apps_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/apps/v1beta1/apps_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/apps/v1beta2/apps_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/apps/v1beta2/apps_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/auditregistration/v1alpha1/auditregistration_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/auditregistration/v1alpha1/auditregistration_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/authentication/v1/authentication_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/authentication/v1/authentication_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/authentication/v1beta1/authentication_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/authentication/v1beta1/authentication_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/authorization/v1/authorization_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/authorization/v1/authorization_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/authorization/v1beta1/authorization_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/authorization/v1beta1/authorization_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/autoscaling/v1/autoscaling_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/autoscaling/v1/autoscaling_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/autoscaling/v2beta1/autoscaling_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/autoscaling/v2beta1/autoscaling_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/autoscaling/v2beta2/autoscaling_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/autoscaling/v2beta2/autoscaling_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/batch/v1/batch_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/batch/v1/batch_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/batch/v1beta1/batch_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/batch/v1beta1/batch_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/batch/v2alpha1/batch_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/batch/v2alpha1/batch_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/certificates/v1beta1/certificates_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/certificates/v1beta1/certificates_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/coordination/v1/coordination_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/coordination/v1/coordination_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/coordination/v1beta1/coordination_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/coordination/v1beta1/coordination_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/core/v1/core_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/core/v1/core_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/events/v1beta1/events_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/events/v1beta1/events_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/extensions/v1beta1/extensions_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/extensions/v1beta1/extensions_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/extensions/v1beta1/generated_expansion.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/extensions/v1beta1/generated_expansion.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/networking/v1/networking_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/networking/v1/networking_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/networking/v1beta1/networking_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/networking/v1beta1/networking_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/node/v1alpha1/node_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/node/v1alpha1/node_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/node/v1beta1/node_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/node/v1beta1/node_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/policy/v1beta1/policy_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/policy/v1beta1/policy_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/rbac/v1/rbac_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/rbac/v1/rbac_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/rbac/v1alpha1/rbac_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/rbac/v1alpha1/rbac_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/rbac/v1beta1/rbac_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/rbac/v1beta1/rbac_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/scheduling/v1/scheduling_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/scheduling/v1/scheduling_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/scheduling/v1alpha1/scheduling_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/scheduling/v1alpha1/scheduling_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/scheduling/v1beta1/scheduling_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/scheduling/v1beta1/scheduling_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/settings/v1alpha1/settings_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/settings/v1alpha1/settings_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/storage/v1/storage_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/storage/v1/storage_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/storage/v1alpha1/storage_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/storage/v1alpha1/storage_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/storage/v1beta1/storage_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/kubernetes/typed/storage/v1beta1/storage_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/rest/config.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/rest/config.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/rest/request.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/rest/request.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/rest/watch/decoder.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/rest/watch/decoder.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/scale/client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/scale/client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/scale/scheme/appsint/register.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/scale/scheme/appsint/register.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/scale/scheme/extensionsint/register.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/scale/scheme/extensionsint/register.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/scale/scheme/register.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/scale/scheme/register.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/tools/cache/expiration_cache.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/tools/cache/expiration_cache.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/tools/cache/expiration_cache_fakes.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/tools/cache/expiration_cache_fakes.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/tools/cache/reflector.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/tools/cache/reflector.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/tools/cache/shared_informer.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/tools/cache/shared_informer.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/tools/cache/store.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/tools/cache/store.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/tools/cache/thread_safe_store.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/tools/cache/thread_safe_store.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/tools/clientcmd/loader.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/tools/clientcmd/loader.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/tools/pager/pager.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/tools/pager/pager.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/tools/record/event.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/tools/record/event.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/tools/record/events_cache.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/tools/record/events_cache.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/tools/watch/retrywatcher.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/tools/watch/retrywatcher.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/transport/token_source.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/transport/token_source.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/client-go/util/flowcontrol/backoff.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/client-go/util/flowcontrol/backoff.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/klog/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/klog/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/klog/SECURITY_CONTACTS" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/klog/SECURITY_CONTACTS" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/klog/klog.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/klog/klog.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/klog/klog_file.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/klog/klog_file.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/kube-openapi/pkg/util/proto/document.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/kube-openapi/pkg/util/proto/document.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/k8s.io/kube-openapi/pkg/util/proto/validation/types.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/k8s.io/kube-openapi/pkg/util/proto/validation/types.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/vendor.json" beforeDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>[]byte</find>
      <find>restclient</find>
      <find>renderer</find>
      <find>ListReleases</find>
      <find>portforwarder</find>
      <find>helmreleases</find>
      <find>.GetConfig</find>
      <find>kube.GetConfig</find>
      <find>Config</find>
      <find>tillerTunnel</find>
      <find>DataResourcesBody</find>
      <find>GetUserAgent</find>
      <find>github.com/zig-helm</find>
      <find>zig-helm/swagger/models</find>
      <find>appengine</find>
      <find>k8s.io/helm/cmd/helm</find>
      <find>httpport</find>
      <find>http server Running</find>
      <find>SERVER:</find>
      <find>jsonconfig</find>
      <find>Could not find protocol handler for</find>
      <find>release</find>
      <find>zig-helm/services</find>
      <find>========</find>
      <find>================</find>
      <find>ListRelease</find>
      <find>settings</find>
      <find>failed to download</find>
      <find>GetReleaseRequest</find>
      <find>useenv</find>
    </findStrings>
    <replaceStrings>
      <replace>CurrentConfig</replace>
      <replace>zig-helm</replace>
    </replaceStrings>
    <dirStrings>
      <dir>$PROJECT_DIR$/chartpackagesort</dir>
      <dir>$PROJECT_DIR$/vendor</dir>
      <dir>$PROJECT_DIR$</dir>
    </dirStrings>
  </component>
  <component name="GOROOT" path="/usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="ProjectFrameBounds" extendedState="6">
    <option name="y" value="23" />
    <option name="width" value="1440" />
    <option name="height" value="877" />
  </component>
  <component name="ProjectId" id="1QK0R1gnch8Un5smGsCDIwoh5ec" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="configurable.Global.GOPATH.is.expanded" value="true" />
    <property name="configurable.Project.GOPATH.is.expanded" value="true" />
    <property name="go.gopath.indexing.explicitly.defined" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.tried.to.enable.integration.vgo.integrator" value="true" />
    <property name="go.vendoring.notification.had.been.shown" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="settings.editor.selected.configurable" value="terminal" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/commons" />
      <recent name="$PROJECT_DIR$/services/releases" />
      <recent name="$PROJECT_DIR$/src/tiller" />
      <recent name="$PROJECT_DIR$/config" />
      <recent name="$PROJECT_DIR$" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/services/handlers" />
      <recent name="$PROJECT_DIR$/services" />
      <recent name="$PROJECT_DIR$/services/helm" />
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/handlers" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.fileTypeFactory" implementationName="*.conf" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
    <proxy>direct</proxy>
  </component>
</project>